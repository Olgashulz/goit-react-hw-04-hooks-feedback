{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Button/Button.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/Button/Button.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","container","Statistics","good","neutral","bad","total","positivePercentage","statistics","list","item","value","isNaN","massage","Button","textBtn","onLeaveFeedback","button","type","onClick","event","FeedbackOptions","options","buttonsBox","map","App","state","addFeedback","setState","prevState","Object","values","this","reduce","acc","val","goodAndBad","Math","round","keys","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd12922f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1AV5C\",\"title\":\"Statistics_title__348_U\",\"item\":\"Statistics_item__3oFas\",\"value\":\"Statistics_value__1zd6J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1hrPi\",\"title\":\"Section_title__3njc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__18Rz_\",\"good\":\"Button_good__3sWT_\",\"bad\":\"Button_bad__1PEO3\",\"neutral\":\"Button_neutral__7YjsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBox\":\"FeedbackOptions_buttonsBox__1T-NE\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={styles.container}>\n      {title && <h3 className={styles.title}>{title}</h3>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className={styles.statistics}>\n      <h3 className={styles.title}> Statistics </h3>\n      <ul className={styles.list}>\n        <li className={styles.item}>\n          Good:\n          <span className={styles.value}>{good}</span>\n        </li>\n        <li className={styles.item}>\n          Neutral:\n          <span className={styles.value}>{neutral}</span>\n        </li>\n        <li className={styles.item}>\n          Bad:\n          <span className={styles.value}>{bad}</span>\n        </li>\n        <li className={styles.item}>\n          Total:\n          <span className={styles.value}>{total}</span>\n        </li>\n        <li className={styles.item}>\n          Positive feedback:\n          <span className={styles.value}>\n            {isNaN(positivePercentage) ? 0 : positivePercentage}%\n          </span>\n        </li>\n      </ul>\n      <p className={styles.massage}></p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nexport default function Button({ textBtn, onLeaveFeedback }) {\n  return (\n    <button\n      className={`${styles.button} ${styles[textBtn]}`}\n      type=\"button\"\n      onClick={event => onLeaveFeedback(event)}\n    >\n      {textBtn}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  textBtn: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport styles from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  // console.log(onLeaveFeedback)\n  return (\n    <div className={styles.buttonsBox}>\n      {options.map(textBtn => (\n        <Button\n          key={textBtn}\n          textBtn={textBtn}\n          // onLeaveFeedback={onLeaveFeedback}\n          onLeaveFeedback={() => onLeaveFeedback(textBtn)}\n        />\n      ))}\n    </div>\n  );\n}\n\n\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  /// вариант если из feedbackOptions приходит ивент, но правильнее и проще если сразу приходит название кнопки\n  // addFeedback = event => {\n  //   const value = event.target.textContent.toLowerCase();\n  //   this.setState(prevState => ({\n  //     [value]: prevState[value] + 1,\n  //   }));\n  // };\n  /////////////////////////////////\n\n  addFeedback = value => {\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, val) => {\n      return acc + val;\n    }, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const goodAndBad = this.state.good + this.state.bad;\n    return Math.round((100 * this.state.good) / goodAndBad);\n    // return ((this.state.good / this.countTotalFeedback()) * 100) - Если учитывать нейтральные отзывы.\n  }\n\n  render() {\n    const { good, bad, neutral } = this.state;\n\n    return (\n      <Section title='Please leave feedback'>\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.addFeedback}\n        />\n\n        {this.countTotalFeedback() > 0 && (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}